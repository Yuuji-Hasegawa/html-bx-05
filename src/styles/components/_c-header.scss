@use "../settings" as setting;
@use "../tools" as tool;
@use "sass:map";

.c-header,
.c-menu-header {
  display: flex;
  align-items: center;
  padding-top: clamp(setting.f-space-px(s), (setting.breakpoints(overm)), setting.f-space-px(m));
  padding-bottom: clamp(setting.f-space-px(s), (setting.breakpoints(overm)), setting.f-space-px(m));
  background: var(--bg);
}

.c-menu-header {
  --bg: var(--c-button-normal);

  position: sticky;
  top: 0;
  z-index: 1002;
}

.c-header {
  --bg: #{rgba(map.get(setting.$sys-light, primary), 0.7)};

  @include tool.darkmode {
    --bg: #{rgba(map.get(setting.$sys-dark, primary), 0.7)};
  }

  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  box-sizing: border-box;
  width: 100%;
  color: var(--c-text-on-fill);
  box-shadow: 0 0 2px var(--c-brand-shade);
}

.c-header-search {
  position: relative;
}

.c-search,
.c-search-icon {
  position: absolute;
  top: 50%;
  cursor: pointer;
  transform: translateY(-50%);
}

.c-search {
  right: 0;
  width: setting.f-space-px(xl);
  height: setting.f-space-px(xl);
  color: transparent;
  background: transparent;
  border: 1px solid transparent;
  border-radius: setting.f-border-radius(s);
  transition: width 0.25s ease-out;

  @include tool.placeholder(transparent);

  &:hover {
    background-color: color-mix(in oklab, transparent, map.get(setting.$sys-light, onContainer) 15%);
  }

  &:focus {
    width: calc(100vw - (2 * setting.f-space-rem(m)));
    max-width: max(setting.breakpoints(unders), 350px);
    padding: setting.f-space-px(s) calc(setting.f-font-remsize(3xl) + setting.f-space-px(s)) setting.f-space-px(s)
      setting.f-space-px(s);
    color: var(--c-text-body);
    background-color: var(--c-text-on-fill);
    border-color: var(--c-brand-middle);

    @include tool.placeholder(var(--c-text-placeholder));

    & + .c-search-icon {
      color: var(--c-button-normal);
    }
  }
}

.c-search-icon {
  right: setting.f-space-px(s);
  font-size: setting.f-font-remsize(3xl);
  line-height: 1;
  color: currentcolor;
  pointer-events: none;
}

.c-logo-label {
  &--footer {
    font-size: clamp(map.get(setting.$fontRemSize, l), (setting.breakpoints(overm)), map.get(setting.$fontRemSize, xl));
  }
}

.c-menu-btn {
  --bg: #{rgba(map.get(setting.$sys-light, primary), 0.7)};

  @include tool.darkmode {
    --bg: #{rgba(map.get(setting.$sys-dark, primary), 0.7)};
  }

  position: fixed;
  right: clamp(
    clamp(setting.f-space-px(m), setting.breakpoints(overm), setting.f-space-px(xl)),
    setting.breakpoints(overs),
    clamp(setting.f-space-px(xl), setting.breakpoints(overm), setting.f-space-px(3xl))
  );
  bottom: setting.f-space-px(3xl);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  width: setting.f-space-px(2xl);
  height: setting.f-space-px(2xl);
  color: var(--c-text-on-fill);
  visibility: hidden;
  background: var(--bg);
  border: solid 1px currentcolor;
  border-radius: 50%;
  opacity: 0;
  transition:
    background-color 0.25s ease,
    color 0.25s ease;

  &:focus,
  &:hover {
    color: var(--c-text-hover);
    background-color: color-mix(in oklab, transparent, map.get(setting.$sys-light, onContainer) 15%);

    & .c-menu-bars {
      background-color: var(--c-text-hover);

      &::before,
      &::after {
        background-color: var(--c-text-hover);
      }
    }
  }

  &--inner {
    position: static;
    visibility: visible;
    opacity: 1;

    &:focus,
    &:hover {
      border-color: var(--c-bg-qua);

      & .c-menu-bars {
        background: transparent;

        &::before,
        &::after {
          background-color: var(--c-bg-qua);
        }
      }
    }
  }
}

.c-menu-bars {
  position: relative;
  width: calc(100% - (2 * setting.f-space-rem(m)));
  height: setting.f-space-px(2xs);
  background: var(--c-text-on-fill);
  border-radius: setting.f-border-radius(s);
  transition: all ease-out 0.3s;

  &::before,
  &::after {
    position: absolute;
    left: 0;
    width: 100%;
    height: setting.f-space-px(2xs);
    content: "";
    background-color: var(--c-text-on-fill);
    border-radius: setting.f-border-radius(s);
    transition: all ease-out 0.3s;
  }

  &::before {
    top: -9px;
  }

  &::after {
    top: 9px;
  }

  .c-menu-btn--inner & {
    background: transparent;

    &::before {
      top: 0;
      transform: rotate(-45deg);
    }

    &::after {
      top: 0;
      transform: rotate(45deg);
    }
  }
}

.c-menu {
  position: fixed;
  bottom: -100%;
  left: 0;
  z-index: 1001;
  width: 100%;
  height: 100%;
  overflow-y: auto;
  pointer-events: none;
  visibility: hidden;
  opacity: 0;
  transition: bottom 0.1s ease-out;

  &[aria-hidden="false"] {
    bottom: 0;
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
    transition: bottom 0.1s ease-out;

    body:has(&) {
      overflow: hidden;
    }
  }
}

.c-menu-bottom {
  margin-right: clamp(setting.f-space-px(m), setting.breakpoints(overm), setting.f-space-px(xl));
  margin-left: clamp(setting.f-space-px(m), setting.breakpoints(overm), setting.f-space-px(xl));
}
